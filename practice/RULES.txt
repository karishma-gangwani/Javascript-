1. special numbers -
// Infinity
// and -infinity

2. Newlines (characters that you get when you press enter)
// can be included without escaping only when the string is quoted with back-ticks (`)
// When a backslash \ is found inside a quoted text it indicated that the character after it has a special meaning. This is called escaping the character.
// a quote that is preceded by a backslash will not end the string but be a part if it.

3. Don't need to define a function in ES6. can directly use the name of the function and pass the argument/value in it.
// Also don't need to define key, value pairs for object literals in ES6.

4. The elements in an array are stored as the array's properties, using numbers as property names.
// Property names are strings. so if you want to access the property named by the value held in the binding i, you say value[i].
// for example, to access the property named 2 or John we say value[2] or value["John"].

5. toUpperCase and toLowerCase. string property.
// properties that contain functions are generally called methods of the value they belong to, as in "toUpperCase is a method of a string"

6. Values of the type object are arbitrary collections of properties.

7. instead of if-else use ternary operator

8. instead of for loop use foreach or reduce

9. instead of keyword function use arrow-functions to create functions but it cannot use the this keyword so very selective use.
// function expression is the best way to write a function.

10. Map -
// use to create a new array and filter is used for filtering through

11. to check type of object.
console.log(typeof 'object/variable')

12. think about functions within functions. complexity? you don't want to change the function in multiple places. writing a smarter and more efficient code. think what if?

13. for an if statement - console.log should come above the return statement otherwise it will not get printed.

14. use the this method. use it to create new properties.
this refers to the object itself. so this can be used as the object itself to call properties or methods.

15. always try to compute the values.

16. use .push to add objects at the end of the array and not unshift/shift which does it at the beginning of the array.

17. continue and break - keywords

18. use Math properties.

19. prompt function always returns a string.

20. console.table - to display the object table

21. Debugging - you can type debugger; in your program to open the debugger in the console.
debugging is used to check the working and errors in your code.

22. When JS interacts with the webpage that is called as DOM manipulation. To select an element use document.queryselector()

23. DOM tree - parent, child, sibling element. For each element there is an element node. 

24. DOM is not part of JS. JS is just a dialect of the ECMA script. DOM and DOM methods are part of web API. Web API's are libraries. 

25. Cmd + control + space = emojis üòÅ

26. Option + up = exchange lines

27. Do not copy objects as assigned variables. Use function object.assign({}, object-that-is-being-copied). But this makes a shallow copy. Not a deep clone.

28. Spread operator works on all iterables including arrays.

29. It is a spread operator coz its on the right side of the = assignment operator and its the rest operator if it is on the left of =. 

30. Spread operator is used to unpack while the rest operator is used to compress. 

31. Short circuit using || && function. || operator returns truth values first and && returns false values first.

32. Nullish coalescing operator. ?? returns left side values. But if there is null or undefined then it will return the other value. Use it for assignment '??='

33. The OR assignment operator assigns a value to a variable if the current value is falsy. For example,

Const rest = {
Name: Capri,
}

Rest.numGuests ||= 10;

So if there is no parameter as numGuests then the OR operator will assign 10 to the parameter. 

34. Restructuring arrays and objects. 

35. Function methods within an object can be written without using its keyword. That is inside an object. 

36. Optional chaining. Use a question mark before a property is called. 

console.log(restaurant.openingHours.mon?.open) --> if mon exists in openingHours then open the property and log it to the console. 

37. Looping over keys and values. 
Use .entries() method to iterate over index, element in arrays. 

const a = ["a", "b", "c"];

for (const [index, element] of a.entries()) {
  console.log(index, element);
}

// 0 'a'
// 1 'b'
// 2 'c'


38. Sets are used for unique values. You can create an array using sets and the spread operator and convert duplicates into unique values.

Const arr = [1,2,3,1,2,1];
Const newarr = [...newset(arr)];

//output: [1,2,3]

39. Convert object to Map:

Const mapName = new Map(object.entries(object));

40. Convert m√£p to array:

Const arr = [...mapname];











